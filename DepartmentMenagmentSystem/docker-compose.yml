version: '3.8'

services:
  app1:
    build: ./backend/app1
    ports:
      - "8081:8080"
    depends_on:
      - database
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/Departments
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: emirEmir41
    networks:
      - mynetwork

  app2:
    build: ./backend/app2
    ports:
      - "8082:8080"
    depends_on:
      - database
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/Departments
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: emirEmir41
    networks:
      - mynetwork

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: Departments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: emirEmir41
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/usr/share/nginx/html  # Frontend dosyalarını Nginx içinde sun
    ports:
      - "80:80"
    depends_on:
      - app1
      - app2
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
